#ifndef GPU_H           /* prevent circular inclusions */
#define GPU_H
#endif

// GPU Controller
#define XPAR_GPU_CONTROLLER_0_S00_AXI_BASEADDR 0x43C00000
#define GPU_CONTROLLER_S00_AXI_SLV_REG0_OFFSET 0
#define GPU_CONTROLLER_S00_AXI_SLV_REG1_OFFSET 4
#define GPU_CONTROLLER_S00_AXI_SLV_REG2_OFFSET 8
#define GPU_CONTROLLER_S00_AXI_SLV_REG3_OFFSET 12
#define GPU_CONTROLLER_S00_AXI_SLV_REG4_OFFSET 16
#define GPU_CONTROLLER_S00_AXI_SLV_REG5_OFFSET 20
#define GPU_CONTROLLER_S00_AXI_SLV_REG6_OFFSET 24
#define GPU_CONTROLLER_S00_AXI_SLV_REG7_OFFSET 28
#define GPU_CONTROLLER_S00_AXI_SLV_REG8_OFFSET 32
#define GPU_CONTROLLER_S00_AXI_SLV_REG9_OFFSET 36
#define GPU_CONTROLLER_S00_AXI_SLV_REG10_OFFSET 40
#define GPU_CONTROLLER_S00_AXI_SLV_REG11_OFFSET 44
#define GPU_CONTROLLER_S00_AXI_SLV_REG12_OFFSET 48

// Sprite register offset definition
#define SPACESHIP_OFFSET		GPU_CONTROLLER_S00_AXI_SLV_REG0_OFFSET
#define ENEMY_SAUCER_OFFSET		GPU_CONTROLLER_S00_AXI_SLV_REG9_OFFSET

// Hardware parameters
#define INVALID_SPRITE_MASK 		0xFFFFFFFF
#define EXTRACT_COORDINATES_MASK	0xFFFFF
#define NUMBER_OF_REGISTERS			13

// Hardware parameters
#define SCREEN_WIDTH 640
#define SCREEN_HEIGHT 480
#define REFRESH_RATE 24 // in Hz

// Interrupt Controller and Inputs
#define INTC_DEVICE_ID 		XPAR_PS7_SCUGIC_0_DEVICE_ID
#define BTNS_DEVICE_ID		XPAR_AXI_GPIO_0_DEVICE_ID
#define INTC_GPIO_INTERRUPT_ID XPAR_FABRIC_AXI_GPIO_0_IP2INTC_IRPT_INTR
#define BTN_INT 			XGPIO_IR_CH1_MASK


// Game Parameters
#define ENEMY_SHOOTING_DELAY 3 // in seconds
#define MAX_BULLET_COUNT 3
#define MAX_ENEMY_BULLET_COUNT 1
#define INIT_ASTRD_NBR	1
#define	INIT_LIVES 3





// Prototype functions used to control the GPU
void RenderBullet(struct Bullet bulletInstance);
void UpdateBullet(struct Bullet oldBulletInstance, struct Bullet newBulletInstance);
void UpdateEnemyBullet(struct Bullet oldBulletInstance, struct Bullet newBulletInstance);
void RenderEnemyBullet(struct Bullet bulletInstance);
void RenderShip();
void RenderEnemySaucer(struct EnemySaucer enemySaucerInstance);
void RenderAsteroid(struct Asteroid asteroidInstance);
void DestroyBullet(struct Bullet bulletInstance);
void DestroyEnemyBullet(struct Bullet bulletInstance);
void DestroyEnemySaucer(struct EnemySaucer enemySaucerInstance);
void DestroyAsteroid(struct Asteroid asteroidInstance);

// Initialization functions
void InitRegisters();
void InitOffsetTable();
